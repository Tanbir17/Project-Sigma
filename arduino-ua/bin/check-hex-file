#! /usr/bin/perl

use strict;
use warnings;

# check-hex-file uploadfile.hex

# Check that there is no sequence of 3 exclamation marks (!!!) in the hex
# file as this will cause the bootloader to hang.

# read in the .hex file and look for three !!!, which are encoded in the
# hex file as 0x21

#  :0610D0001994F894FFCF13
#  :1010D6002020202020202020202020202020202109
#  :1010E6002121006400000000007006C707040635D1

# Format of Intel hex is (partly)
#   :
#   BB
#   AAAA
#   RR
#   DD .... DD
#   CC

#   All numbers are in hex
#   B is data byte count
#   A is address in memory where data starts
#   R is record type
#       00 - data
#       01 - end of file
#       02 - extended segment address record
#       03 - start segment address record
#       04 - extended linear address record
#       05 - start linear address record
#   C is the checksum, mod 256 so that C + sum of row = 0

# if the !!! are adjacent in the line, it is no problem to detect them.
# but they could span a line, in which case you need to check the next
# line also.

# quick hack, assume adjacent lines are adjacent memory, and simply 
# drop all but the data characters and pattern match.  This should be ok
# since if they are not adjacent memory then a command to adjust the
# destiation address will have to be sent.  Might get a false positive.

my $data = "";
while (my $line = <> ) {
    chomp($line);
    # clear trailing white space, drop the prefix
    $line =~ s/\s*$//;
    $line =~ s/^.........//;
    $line =~ s/..$//;
    $data .= $line;
    }

if ( $data =~ /212121/ ) {
    print << "WARNING_MSG";

WARNING: you might have !!! in your program hex file, and the bootloader might
hang.  If it does hang, then hunt down any !!! sequences in a string.  If it
still hangs, then look for data initializations that contain 0x212121 bit 
seqeunces.  If it still hangs, you have a case where code is being generated 
that looks like 0x212121.  In this case you need to alter your code a bit to 
remove the sequence, or update the bootloader on your board.

WARNING_MSG
    # force makefile to terminate
    # exit 1;
    # forge ahead and hope they read error message
    exit 0;
}

print "Hex file looks ok\n";
exit 0;
